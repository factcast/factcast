@startuml

title __PGSQL's Class Diagram__\n

  namespace org.factcast.store.pgsql {
    enum CatchupStrategy {
      PAGED
    }
  }
  

  namespace org.factcast.store.pgsql {
    class org.factcast.store.pgsql.PgConfigurationProperties {
        {static} + PROPERTIES_PREFIX : String
        {static} - LEGACY_PREFIX : String
        - allowUnvalidatedPublish : boolean
        - appContext : ApplicationContext
        - deleteSnapshotStaleForDays : int
        - deleteTransformationsStaleForDays : int
        - env : Environment
        - factNotificationBlockingWaitTimeInMillis : int
        - factNotificationMaxRoundTripLatencyInMillis : int
        - factNotificationNewConnectionWaitTimeInMillis : int
        - inMemTransformationCacheCapacity : int
        {static} - log : Logger
        - pageSize : int
        - persistentRegistry : boolean
        - persistentTransformationCache : boolean
        - queueFetchRatio : int
        - queueSize : int
        - schemaRegistryUrl : String
        + PgConfigurationProperties()
        + equals()
        + getAppContext()
        + getCatchupStrategy()
        + getDeleteSnapshotStaleForDays()
        + getDeleteTransformationsStaleForDays()
        + getEnv()
        + getFactNotificationBlockingWaitTimeInMillis()
        + getFactNotificationMaxRoundTripLatencyInMillis()
        + getFactNotificationNewConnectionWaitTimeInMillis()
        + getFetchSize()
        + getInMemTransformationCacheCapacity()
        + getPageSize()
        + getQueueFetchRatio()
        + getQueueSize()
        + getSchemaRegistryUrl()
        + hashCode()
        + isAllowUnvalidatedPublish()
        + isPersistentRegistry()
        + isPersistentTransformationCache()
        + isValidationEnabled()
        + onApplicationEvent()
        + setAllowUnvalidatedPublish()
        + setAppContext()
        + setCatchupStrategy()
        + setDeleteSnapshotStaleForDays()
        + setDeleteTransformationsStaleForDays()
        + setEnv()
        + setFactNotificationBlockingWaitTimeInMillis()
        + setFactNotificationMaxRoundTripLatencyInMillis()
        + setFactNotificationNewConnectionWaitTimeInMillis()
        + setInMemTransformationCacheCapacity()
        + setPageSize()
        + setPersistentRegistry()
        + setPersistentTransformationCache()
        + setQueueFetchRatio()
        + setQueueSize()
        + setSchemaRegistryUrl()
        + toString()
        # canEqual()
        - findAllProperties()
    }
  }
  

  namespace org.factcast.store.pgsql {
    class org.factcast.store.pgsql.PgFactStoreConfiguration {
        ~ PGConfigurationProperties()
    }
  }
  

  org.factcast.store.pgsql.PgConfigurationProperties .up.|> org.springframework.context.ApplicationListener
  org.factcast.store.pgsql.PgConfigurationProperties o-- org.factcast.store.pgsql.CatchupStrategy : catchupStrategy


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
