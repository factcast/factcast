@startuml

title __REGISTRY's Class Diagram__\n

  namespace org.factcast.store.pgsql {
    namespace registry {
      abstract class org.factcast.store.pgsql.registry.AbstractSchemaRegistry {
          # mutex : Object
          - cache : LoadingCache<SchemaKey, JsonSchema>
          {static} - log : Logger
          + AbstractSchemaRegistry()
          + fetchInitial()
          + get()
          + get()
          + refresh()
          + register()
          # process()
          - updateSchemes()
          - updateTransformations()
      }
    }
  }
  

  namespace org.factcast.store.pgsql {
    namespace registry {
      interface org.factcast.store.pgsql.registry.IndexFetcher {
          {abstract} + fetchIndex()
      }
    }
  }
  

  namespace org.factcast.store.pgsql {
    namespace registry {
      class org.factcast.store.pgsql.registry.NOPSchemaRegistry {
          {static} - EMPTY : List<Transformation>
          + fetchInitial()
          + get()
          + get()
          + refresh()
          + register()
      }
    }
  }
  

  namespace org.factcast.store.pgsql {
    namespace registry {
      class org.factcast.store.pgsql.registry.RegistryFileFetchException {
          {static} - serialVersionUID : long
          + RegistryFileFetchException()
      }
    }
  }
  

  namespace org.factcast.store.pgsql {
    namespace registry {
      interface org.factcast.store.pgsql.registry.RegistryFileFetcher {
          {abstract} + fetchSchema()
          {abstract} + fetchTransformation()
      }
    }
  }
  

  namespace org.factcast.store.pgsql {
    namespace registry {
      class org.factcast.store.pgsql.registry.RegistryIndex {
          - schemes : List<SchemaSource>
          - transformations : List<TransformationSource>
          + RegistryIndex()
          + equals()
          + hashCode()
          + schemes()
          + schemes()
          + toString()
          + transformations()
          + transformations()
          # canEqual()
      }
    }
  }
  

  namespace org.factcast.store.pgsql {
    namespace registry {
      class org.factcast.store.pgsql.registry.ScheduledRegistryRefresher {
          {static} - log : Logger
          + ScheduledRegistryRefresher()
          + equals()
          + hashCode()
          + refresh()
          + registry()
          + toString()
      }
    }
  }
  

  namespace org.factcast.store.pgsql {
    namespace registry {
      interface org.factcast.store.pgsql.registry.SchemaRegistry {
          {abstract} + fetchInitial()
          {abstract} + get()
          {abstract} + get()
          {abstract} + refresh()
          {abstract} + register()
      }
    }
  }
  

  namespace org.factcast.store.pgsql {
    namespace registry {
      class org.factcast.store.pgsql.registry.SchemaRegistryConfiguration {
          {static} - log : Logger
          + registryMetrics()
          + scheduledRegistryFresher()
          + schemaRegistry()
      }
    }
  }
  

  namespace org.factcast.store.pgsql {
    namespace registry {
      class org.factcast.store.pgsql.registry.SchemaRegistryUnavailableException {
          {static} - serialVersionUID : long
          + SchemaRegistryUnavailableException()
          + SchemaRegistryUnavailableException()
      }
    }
  }
  

  org.factcast.store.pgsql.registry.AbstractSchemaRegistry .up.|> org.factcast.store.pgsql.registry.SchemaRegistry
  org.factcast.store.pgsql.registry.AbstractSchemaRegistry o-- org.factcast.store.pgsql.registry.IndexFetcher : indexFetcher
  org.factcast.store.pgsql.registry.AbstractSchemaRegistry o-- org.factcast.store.pgsql.registry.RegistryFileFetcher : registryFileFetcher
  org.factcast.store.pgsql.registry.AbstractSchemaRegistry o-- org.factcast.store.pgsql.registry.metrics.RegistryMetrics : registryMetrics
  org.factcast.store.pgsql.registry.AbstractSchemaRegistry o-- org.factcast.store.pgsql.registry.validation.schema.SchemaStore : schemaStore
  org.factcast.store.pgsql.registry.AbstractSchemaRegistry o-- org.factcast.store.pgsql.registry.transformation.TransformationStore : transformationStore
  org.factcast.store.pgsql.registry.NOPSchemaRegistry .up.|> org.factcast.store.pgsql.registry.SchemaRegistry
  org.factcast.store.pgsql.registry.RegistryFileFetchException -up-|> java.io.IOException
  org.factcast.store.pgsql.registry.ScheduledRegistryRefresher o-- org.factcast.store.pgsql.registry.SchemaRegistry : registry


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
