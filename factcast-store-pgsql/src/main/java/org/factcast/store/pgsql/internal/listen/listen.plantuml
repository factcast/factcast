@startuml

title __LISTEN's Class Diagram__\n

  namespace org.factcast.store.pgsql {
    namespace internal {
      namespace listen {
        class org.factcast.store.pgsql.internal.listen.PgConnectionSupplier {
            # ds : DataSource
            {static} - log : Logger
            + PgConnectionSupplier()
            + get()
            ~ buildPgConnectionProperties()
            - setProperty()
        }
      }
    }
  }
  

  namespace org.factcast.store.pgsql {
    namespace internal {
      namespace listen {
        class org.factcast.store.pgsql.internal.listen.PgConnectionTester {
            {static} - MAX_ALLOWED_NOTIFICATION_LATENCY_IN_MILLIS : int
            {static} - log : Logger
            + test()
            ~ testNotificationRoundTrip()
            ~ testSelectStatement()
            - prepareStatement()
        }
      }
    }
  }
  

  namespace org.factcast.store.pgsql {
    namespace internal {
      namespace listen {
        class org.factcast.store.pgsql.internal.listen.PgListener {
            - countDownLatch : CountDownLatch
            - eventBus : EventBus
            - listenerThread : Thread
            {static} - log : Logger
            - running : AtomicBoolean
            + PgListener()
            + afterPropertiesSet()
            + destroy()
            # checkDatabaseConnectionHealthy()
            # informSubscriberOfChannelNotifications()
            # informSubscribersAboutFreshConnection()
            # listen()
            # postEvent()
            # receiveNotifications()
            # setupPostgresListeners()
            # sleep()
            - connectionSetup()
        }
      }
    }
  }
  

  namespace org.factcast.store.pgsql {
    namespace internal {
      namespace listen {
        class org.factcast.store.pgsql.internal.listen.PgListener.FactInsertionEvent {
            - name : String
            + FactInsertionEvent()
            + name()
        }
      }
    }
  }
  

  namespace org.factcast.store.pgsql {
    namespace internal {
      namespace listen {
        class org.factcast.store.pgsql.internal.listen.PgListener.NotificationReceiverLoop {
            + run()
        }
      }
    }
  }
  

  org.factcast.store.pgsql.internal.listen.PgConnectionTester .up.|> java.util.function.Predicate
  org.factcast.store.pgsql.internal.listen.PgListener .up.|> org.springframework.beans.factory.DisposableBean
  org.factcast.store.pgsql.internal.listen.PgListener .up.|> org.springframework.beans.factory.InitializingBean
  org.factcast.store.pgsql.internal.listen.PgListener o-- org.factcast.store.pgsql.internal.listen.PgConnectionSupplier : pgConnectionSupplier
  org.factcast.store.pgsql.internal.listen.PgListener o-- org.factcast.store.pgsql.internal.PgMetrics : pgMetrics
  org.factcast.store.pgsql.internal.listen.PgListener o-- org.factcast.store.pgsql.PgConfigurationProperties : props
  org.factcast.store.pgsql.internal.listen.PgListener +-down- org.factcast.store.pgsql.internal.listen.PgListener.FactInsertionEvent
  org.factcast.store.pgsql.internal.listen.PgListener +-down- org.factcast.store.pgsql.internal.listen.PgListener.NotificationReceiverLoop
  org.factcast.store.pgsql.internal.listen.PgListener.NotificationReceiverLoop .up.|> java.lang.Runnable


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
