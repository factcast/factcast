@startuml

title __AUTH's Class Diagram__\n

  namespace org.factcast.server.grpc {
    namespace auth {
      class org.factcast.server.grpc.auth.AccessRules {
          - exclude : List<String>
          - include : List<String>
          + AccessRules()
          # exclude()
          # include()
          ~ includes()
          - matches()
      }
    }
  }
  

  namespace org.factcast.server.grpc {
    namespace auth {
      class org.factcast.server.grpc.auth.FactCastAccessConfiguration {
          - accountIndex : Map<String, FactCastAccount>
          - accounts : List<FactCastAccount>
          - roleIndex : Map<String, FactCastRole>
          - roles : List<FactCastRole>
          + FactCastAccessConfiguration()
          + accounts()
          + findAccountById()
          + findRoleById()
          {static} + read()
          {static} + read()
          # roles()
          ~ initialize()
      }
    }
  }
  

  namespace org.factcast.server.grpc {
    namespace auth {
      class org.factcast.server.grpc.auth.FactCastAccount {
          {static} + GOD : FactCastAccount
          - id : String
          - roleNames : List<String>
          - roles : List<FactCastRole>
          + FactCastAccount()
          + FactCastAccount()
          + canRead()
          + canWrite()
          + equals()
          + hashCode()
          + id()
          + id()
          + initialize()
          + roleNames()
          + roles()
          + toString()
          # canEqual()
          # role()
          # roles()
      }
    }
  }
  

  namespace org.factcast.server.grpc {
    namespace auth {
      class org.factcast.server.grpc.auth.FactCastAuthority {
          {static} + AUTHENTICATED : String
      }
    }
  }
  

  namespace org.factcast.server.grpc {
    namespace auth {
      class org.factcast.server.grpc.auth.FactCastRole {
          - id : String
          + FactCastRole()
          + canRead()
          + canWrite()
          + equals()
          + hashCode()
          + id()
          + id()
          + read()
          + read()
          + toString()
          + write()
          + write()
          # FactCastRole()
          # canEqual()
      }
    }
  }
  

  namespace org.factcast.server.grpc {
    namespace auth {
      class org.factcast.server.grpc.auth.FactCastSecret {
          - id : String
          - secret : String
          + FactCastSecret()
          + equals()
          + hashCode()
          + id()
          + id()
          + secret()
          + secret()
          + toString()
          # canEqual()
      }
    }
  }
  

  namespace org.factcast.server.grpc {
    namespace auth {
      class org.factcast.server.grpc.auth.FactCastUser {
          - readAccess : Map<String, Boolean>
          {static} - serialVersionUID : long
          - user : User
          - writeAccess : Map<String, Boolean>
          + FactCastUser()
          + canRead()
          + canWrite()
          + eraseCredentials()
          + getAuthorities()
          + getPassword()
          + getUsername()
          + isAccountNonExpired()
          + isAccountNonLocked()
          + isCredentialsNonExpired()
          + isEnabled()
      }
    }
  }
  

  org.factcast.server.grpc.auth.FactCastRole o-- org.factcast.server.grpc.auth.AccessRules : read
  org.factcast.server.grpc.auth.FactCastRole o-- org.factcast.server.grpc.auth.AccessRules : write
  org.factcast.server.grpc.auth.FactCastUser .up.|> org.springframework.security.core.CredentialsContainer
  org.factcast.server.grpc.auth.FactCastUser .up.|> org.springframework.security.core.userdetails.UserDetails
  org.factcast.server.grpc.auth.FactCastUser o-- org.factcast.server.grpc.auth.FactCastAccount : account


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
