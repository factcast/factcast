@startuml

title __GRPC's Class Diagram__\n

  namespace org.factcast.server.grpc {
    class org.factcast.server.grpc.BlockingStreamObserver {
        {static} - RETRY_COUNT : int
        {static} - WAIT_TIME : int
        - delegate : ServerCallStreamObserver<T>
        - id : String
        - lock : Object
        {static} - log : Logger
        + onCompleted()
        + onError()
        + onNext()
        ~ BlockingStreamObserver()
        ~ wakeup()
    }
  }
  

  namespace org.factcast.server.grpc {
    class org.factcast.server.grpc.FactCastGrpcServerConfiguration {
        + factStoreGrpcService()
        + grpcCompressionInterceptor()
        + grpcExceptionInterceptor()
        + grpcLimitProperties()
    }
  }
  

  namespace org.factcast.server.grpc {
    class org.factcast.server.grpc.FactCastSecretProperties {
        - secrets : Map<String, String>
        + getSecrets()
    }
  }
  

  namespace org.factcast.server.grpc {
    class org.factcast.server.grpc.FactCastSecurityConfiguration {
        {static} - CLASSPATH_FACTCAST_ACCESS_JSON : String
        {static} - log : Logger
        + authenticationConfig()
        + credentialConfigurationFromClasspath()
        + factCastSecretProperties()
        ~ authenticationManager()
        ~ authenticationReader()
        ~ daoAuthenticationProvider()
        ~ godModeUserDetailsService()
        ~ noOpAuthenticationReader()
        ~ userDetailsService()
        - toUser()
    }
  }
  

  namespace org.factcast.server.grpc {
    class org.factcast.server.grpc.FactStoreGrpcService {
        {static} ~ PROTOCOL_VERSION : ProtocolVersion
        {static} ~ subscriptionIdStore : AtomicLong
        {static} - log : Logger
        - subscriptionTrail : LoadingCache<String, Bucket>
        + FactStoreGrpcService()
        + clearSnapshot()
        + currentTime()
        + enumerateNamespaces()
        + enumerateTypes()
        + fetchById()
        + fetchByIdAndVersion()
        + getSnapshot()
        + handshake()
        + invalidate()
        + publish()
        + publishConditional()
        + serialOf()
        + setSnapshot()
        + stateFor()
        + subscribe()
        # FactStoreGrpcService()
        # assertCanRead()
        # assertCanRead()
        # assertCanWrite()
        # getFactcastUser()
        ~ getProjectProperties()
        ~ retrieveImplementationVersion()
        - collectProperties()
        - doFetchById()
        - enableResponseCompression()
        - resetDebugInfo()
        - subscriptionRequestAccepted()
    }
  }
  

  namespace org.factcast.server.grpc {
    interface org.factcast.server.grpc.FactStoreGrpcService.ThrowingSupplier {
        {abstract} + get()
    }
  }
  

  namespace org.factcast.server.grpc {
    class org.factcast.server.grpc.FactcastRemoteException {
        {static} + of()
        {static} - createMetaData()
    }
  }
  

  namespace org.factcast.server.grpc {
    class org.factcast.server.grpc.GrpcCompressionInterceptor {
        {static} - log : Logger
        + GrpcCompressionInterceptor()
        + interceptCall()
    }
  }
  

  namespace org.factcast.server.grpc {
    class org.factcast.server.grpc.GrpcExceptionInterceptor {
        + interceptCall()
    }
  }
  

  namespace org.factcast.server.grpc {
    class org.factcast.server.grpc.GrpcExceptionInterceptor.ExceptionHandlingServerCallListener {
        - metadata : Metadata
        - serverCall : ServerCall<ReqT, RespT>
        + onHalfClose()
        + onReady()
        ~ ExceptionHandlingServerCallListener()
        - handleException()
    }
  }
  

  namespace org.factcast.server.grpc {
    class org.factcast.server.grpc.GrpcLimitProperties {
        - initialNumberOfCatchupRequestsAllowedPerClient : int
        - initialNumberOfFollowRequestsAllowedPerClient : int
        - numberOfCatchupRequestsAllowedPerClientPerMinute : int
        - numberOfFollowRequestsAllowedPerClientPerMinute : int
        + GrpcLimitProperties()
        + equals()
        + hashCode()
        + initialNumberOfCatchupRequestsAllowedPerClient()
        + initialNumberOfCatchupRequestsAllowedPerClient()
        + initialNumberOfFollowRequestsAllowedPerClient()
        + initialNumberOfFollowRequestsAllowedPerClient()
        + numberOfCatchupRequestsAllowedPerClientPerMinute()
        + numberOfCatchupRequestsAllowedPerClientPerMinute()
        + numberOfFollowRequestsAllowedPerClientPerMinute()
        + numberOfFollowRequestsAllowedPerClientPerMinute()
        + toString()
        # canEqual()
    }
  }
  

  namespace org.factcast.server.grpc {
    class org.factcast.server.grpc.GrpcObserverAdapter {
        - id : String
        {static} - log : Logger
        - observer : StreamObserver<MSG_Notification>
        - projection : Function<Fact, MSG_Notification>
        + GrpcObserverAdapter()
        + onCatchup()
        + onComplete()
        + onError()
        + onNext()
        - tryComplete()
    }
  }
  

  namespace org.factcast.server.grpc {
    class org.factcast.server.grpc.TransportLayerException {
        {static} - serialVersionUID : long
        ~ TransportLayerException()
    }
  }
  

  org.factcast.server.grpc.BlockingStreamObserver .up.|> io.grpc.stub.StreamObserver
  org.factcast.server.grpc.FactStoreGrpcService -up-|> org.factcast.grpc.api.gen.RemoteFactStoreGrpc.RemoteFactStoreImplBase
  org.factcast.server.grpc.FactStoreGrpcService o-- org.factcast.grpc.api.CompressionCodecs : codecs
  org.factcast.server.grpc.FactStoreGrpcService o-- org.factcast.grpc.api.conv.ProtoConverter : converter
  org.factcast.server.grpc.FactStoreGrpcService o-- org.factcast.server.grpc.GrpcLimitProperties : grpcLimitProperties
  org.factcast.server.grpc.FactStoreGrpcService o-- org.factcast.core.store.FactStore : store
  org.factcast.server.grpc.FactStoreGrpcService +-down- org.factcast.server.grpc.FactStoreGrpcService.ThrowingSupplier
  org.factcast.server.grpc.GrpcCompressionInterceptor .up.|> io.grpc.ServerInterceptor
  org.factcast.server.grpc.GrpcCompressionInterceptor o-- org.factcast.grpc.api.CompressionCodecs : codecs
  org.factcast.server.grpc.GrpcExceptionInterceptor .up.|> io.grpc.ServerInterceptor
  org.factcast.server.grpc.GrpcExceptionInterceptor +-down- org.factcast.server.grpc.GrpcExceptionInterceptor.ExceptionHandlingServerCallListener
  org.factcast.server.grpc.GrpcExceptionInterceptor.ExceptionHandlingServerCallListener -up-|> io.grpc.ForwardingServerCallListener.SimpleForwardingServerCallListener
  org.factcast.server.grpc.GrpcObserverAdapter .up.|> org.factcast.core.subscription.observer.FactObserver
  org.factcast.server.grpc.GrpcObserverAdapter o-- org.factcast.grpc.api.conv.ProtoConverter : converter


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
