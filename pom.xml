<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.factcast</groupId>
  <artifactId>factcast</artifactId>
  <version>0.7.5-SNAPSHOT</version>
  <packaging>pom</packaging>
  <organization>
    <name>factcast</name>
    <url>http://factcast.org</url>
  </organization>
  <name>factcast</name>
  <description>factcast is a 'good enough' event store using PostgreSQL
    for persistence, and offers an GRPC interface and a java client
    library for rapid application development.
  </description>
  <inceptionYear>2018</inceptionYear>
  <issueManagement>
    <system>github</system>
    <url>https://github.com/factcast/factcast/issues</url>
  </issueManagement>
  <modules>
    <module>factcast-bom</module>
    <module>factcast-test</module>
    <module>factcast-test-redis</module>
    <module>factcast-internal-dep</module>
    <module>factcast-internal-dep-boot</module>
    <module>factcast-spring-boot-autoconfigure</module>
    <module>factcast-factus-event</module>
    <module>factcast-factus-bin-snapser</module>
    <module>factcast-client-grpc</module>
    <module>factcast-client-grpc-cli</module>
    <module>factcast-store</module>
    <module>factcast-store-rds</module>
    <module>factcast-store-test</module>
    <module>factcast-core</module>
    <module>factcast-factus</module>
    <module>factcast-factus-redis</module>
    <module>factcast-factus-spring-tx</module>
    <module>factcast-server-grpc</module>
    <module>factcast-server-security</module>
    <module>factcast-server-ui</module>
    <module>factcast-grpc-api</module>
    <module>factcast-schema-registry-cli</module>
    <module>factcast-schema-registry-maven-plugin</module>
    <module>factcast-snapshotcache-redisson</module>
  </modules>
  <url>https://github.com/factcast/factcast/tree/master/</url>
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>
  <scm>
    <connection>scm:git:git@github.com:factcast/factcast.git</connection>
    <developerConnection>scm:git:git@github.com:factcast/factcast.git</developerConnection>
    <url>https://github.com/factcast/factcast.git</url>
    <tag>HEAD</tag>
  </scm>
  <developers>
    <developer>
      <name>Uwe Schaefer</name>
      <organization>factcast</organization>
      <organizationUrl>http://factcast.org</organizationUrl>
    </developer>
  </developers>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <maven-clean-plugin.version>3.3.2</maven-clean-plugin.version>
    <maven-javadoc-plugin.version>3.6.3</maven-javadoc-plugin.version>
    <maven-source-plugin.version>3.3.0</maven-source-plugin.version>
    <maven-gpg-plugin.version>3.1.0</maven-gpg-plugin.version>
    <maven-jar-plugin.version>3.3.0</maven-jar-plugin.version>
    <maven-surefire-plugin.version>3.2.3</maven-surefire-plugin.version>
    <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
    <maven-failsafe-plugin.version>3.2.3</maven-failsafe-plugin.version>
    <nexus-staging-maven-plugin.version>1.6.8</nexus-staging-maven-plugin.version>
    <directory-maven-plugin.version>0.3.1</directory-maven-plugin.version>
    <jacoco-maven-plugin.version>0.8.11</jacoco-maven-plugin.version>
    <maven.version>3.9.6</maven.version>
    <!-- defaults to 11, client modules will be compiled with/to 8 -->
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>
    <maven.compiler.version>3.11.0</maven.compiler.version>
    <spotless-maven-plugin.version>2.41.1</spotless-maven-plugin.version>
    <directory-maven-plugin.version>1.0</directory-maven-plugin.version>
    <nexus-staging-maven-plugin.version>1.6.13</nexus-staging-maven-plugin.version>
    <assertj.version>3.24.2</assertj.version>
    <jackson.version>2.15.3</jackson.version>
    <mockito.version>5.8.0</mockito.version>
    <junit-jupiter.version>5.10.1</junit-jupiter.version>
    <lombok.version>1.18.30</lombok.version>
    <slf4j-api.version>2.0.9</slf4j-api.version>
    <!--suppress UnresolvedMavenProperty -->
    <etc>${session.executionRootDirectory}/src/etc</etc>
    <spring-boot.version>3.1.5</spring-boot.version>
    <spring-cloud.version>2022.0.4</spring-cloud.version>
    <!-- whenever updating spring-grpc make sure to align grpc.version accordingly. -->
    <spring-grpc.version>2.15.0.RELEASE</spring-grpc.version>
    <grpc.version>1.59.0</grpc.version>
    <!-- lter versions seem to break toxi -->
    <testcontainers.version>1.19.3</testcontainers.version>
    <arrow.version>1.2.1</arrow.version>
    <micronaut.version>4.2.1</micronaut.version>
    <kotlin.version>1.9.21</kotlin.version>
    <kotlin.compiler.jvmTarget>11</kotlin.compiler.jvmTarget>
    <kotest.version>5.8.0</kotest.version>
    <mockk.version>1.13.8</mockk.version>
    <redisson.version>3.25.0</redisson.version>
    <redisson-spring-boot-starter.version>3.23.5</redisson-spring-boot-starter.version>
    <graaljs.version>23.0.1</graaljs.version>
    <shedlock.version>5.10.2</shedlock.version>
    <byte-buddy.version>1.14.10</byte-buddy.version>
    <skipUnitTests>false</skipUnitTests>
    <!-- as long as we promise pg11 compatibility, it might make sense to also
      test against it -->
    <postgres.version>11</postgres.version>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-properties-migrator</artifactId>
      <scope>runtime</scope>
      <version>${spring-boot.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>annotations</artifactId>
      <version>3.0.1u2</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>javax.annotation-api</artifactId>
      <version>1.3.2</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-commons</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>net.bytebuddy</groupId>
      <artifactId>byte-buddy-agent</artifactId>
      <version>${byte-buddy.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>net.bytebuddy</groupId>
      <artifactId>byte-buddy</artifactId>
      <version>${byte-buddy.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${lombok.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>5.10.1</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-starter-aws-jdbc</artifactId>
        <version>2.2.6.RELEASE</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.4.1</version>
        <executions>
          <execution>
            <id>enforce-versions</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>3.8.1</version>
                </requireMavenVersion>
                <requireJavaVersion>
                  <version>17</version>
                </requireJavaVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>kr.motd.maven</groupId>
        <artifactId>os-maven-plugin</artifactId>
        <version>1.7.1</version>
        <executions>
          <execution>
            <phase>initialize</phase>
            <goals>
              <goal>detect</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.amashchenko.maven.plugin</groupId>
        <artifactId>gitflow-maven-plugin</artifactId>
        <version>1.20.0</version>
        <configuration>
          <gitFlowConfig>
            <developmentBranch>master</developmentBranch>
          </gitFlowConfig>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.compiler.version}</version>
        <configuration>
          <useIncrementalCompilation>true</useIncrementalCompilation>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${maven-resources-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco-maven-plugin.version}</version>
        <configuration>
          <excludes>
            <exclude>**/*Configuration.*</exclude>
            <exclude>**/*ConfigurationProperties.*</exclude>
            <exclude>**/org/factcast/example/**/*</exclude>
            <exclude>**/org/factcast/example/*</exclude>
            <exclude>**/org/factcast/grpc/api/gen/**</exclude>
            <exclude>**/org/factcast/client/grpc/cli/**</exclude>
            <exclude>**/org/factcast/store/test/**</exclude>
            <exclude>**/*Application.*</exclude>
            <exclude>**/*Exception.*</exclude>
            <exclude>**/gen/*</exclude>
            <exclude>**/generated/*</exclude>
          </excludes>
        </configuration>
        <executions>
          <!-- collect execution data during surefire execution. To make this
            work, make sure surefire uses the given prepared property as an argument
            and also its configuration has a forkcount > 0 so that the argument will
            actually be used. -->
          <execution>
            <id>before-unit-test-execution</id>
            <phase>test-compile</phase>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <destFile>${project.build.directory}/jacoco/jacoco-unit-tests.exec</destFile>
              <propertyName>surefire.jacoco.args</propertyName>
            </configuration>
          </execution>


          <!-- For each module, combine class data and recorded execution data
            into an XML report -->
          <execution>
            <id>unit-coverage-report</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <formats>XML</formats>
              <dataFile>${project.build.directory}/jacoco/jacoco-unit-tests.exec</dataFile>
            </configuration>
          </execution>

          <!-- collect execution data during failsafe execution. To make this
            work, make sure failsafe uses the given prepared property as an argument
            and also its configuration has a forkcount > 0 so that the argument will
            actually be used. -->
          <execution>
            <id>before-integration-test-execution</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <destFile>${project.build.directory}/jacoco/jacoco-integration-tests.exec</destFile>
              <propertyName>failsafe.jacoco.args</propertyName>
            </configuration>
          </execution>

          <!-- In order to create a unified report from unit AND integration tests,
            the execution data files have to be merged into one -->
          <execution>
            <id>merge-unit-and-int-test-coverage</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>merge</goal>
            </goals>
            <configuration>
              <fileSets>
                <fileSet>
                  <directory>${project.build.directory}</directory>
                  <includes>
                    <include>jacoco/jacoco-unit-tests.exec</include>
                    <include>jacoco/jacoco-integration-tests.exec</include>
                  </includes>
                </fileSet>
              </fileSets>
              <destFile>${project.build.directory}/jacoco/jacoco-merged.exec</destFile>
            </configuration>
          </execution>
          <!-- based on the merged execution data, create a report. -->
          <execution>
            <id>full-coverage-report</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <formats>XML</formats>
              <dataFile>${project.build.directory}/jacoco/jacoco-merged.exec</dataFile>
            </configuration>
          </execution>

          <!-- All the above executions run for each module, so that there is
            a unit coverage report if you do mvn test, that will be overwritten by a
            unified report if you do mvn verify -->
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <includes>
            <include>*</include>
          </includes>
          <excludedGroups>integration,uitest</excludedGroups>
          <!--suppress UnresolvedMavenProperty -->
          <argLine>${surefire.jacoco.args}</argLine>
          <skip>${skipUnitTests}</skip>
          <parallel>classes</parallel>
          <threadCountClasses>8</threadCountClasses>
          <!-- In order for surefire to use the prepared jacoco arguments, we'd
            need to fork in order to pass those along to the testing VM -->
          <forkCount>1</forkCount>
          <reuseForks>true</reuseForks>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${maven-failsafe-plugin.version}</version>
        <configuration>
          <groups>integration</groups>
          <includes>
            <include>*</include>
          </includes>
          <!--suppress UnresolvedMavenProperty -->
          <argLine>${failsafe.jacoco.args}</argLine>
          <systemPropertyVariables>
            <postgres.version>${postgres.version}</postgres.version>
            <factcast.version>${factcast.version}</factcast.version>
          </systemPropertyVariables>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>${spotless-maven-plugin.version}</version>
        <inherited>false</inherited>
        <configuration>
          <java>
            <licenseHeader>
              <file>file://${etc}/header.txt</file>
            </licenseHeader>
            <includes>
              <include>**/src/*/java/**/*.java</include>
            </includes>
            <excludes>
              <exclude>/**/target/*</exclude>
            </excludes>
            <trimTrailingWhitespace />
            <googleJavaFormat>
              <version>1.15.0</version>
              <style>GOOGLE</style>
            </googleJavaFormat>
          </java>
          <!-- Temporarily disabled, until 0.7 Branch is merged to avoid noisy
            merge conflicts -->
          <!-- <kotlin> <licenseHeader> <file>file://${etc}/header.txt</file>
            </licenseHeader> <trimTrailingWhitespace /> <ktlint> <version>0.46.0</version>
            </ktlint> <includes> <include>**/src/*/kotlin/**/*.kt </include> </includes>
            </kotlin> -->
          <sql>
            <excludes>
              <exclude>**/src/main/resources/db/**</exclude>
              <exclude>**/src/test/resources/*.sql</exclude>
              <exclude>**/target/classes/**/*.sql</exclude>
            </excludes>
            <includes>
              <include>**/*.sql</include>
            </includes>
            <dbeaver>
              <configFile>dbeaver.properties</configFile>
            </dbeaver>
          </sql>
          <formats>
            <format>
              <!-- <excludes> <exclude>**/documentation-docsy/**</exclude> <exclude>**/output/public/**</exclude>
                <exclude>.*/**</exclude> <exclude>/**/target/*</exclude> </excludes> -->
              <includes>
                <include>/*.xml</include>
                <include>**/pom.xml</include>
                <include>**/src/**/*.xml</include>
                <include>**/src/**/*.xsd</include>
              </includes>
              <eclipseWtp>
                <type>XML</type>
                <version>4.13.0</version>
              </eclipseWtp>
              <indent>
                <spaces>true</spaces>
                <spacesPerTab>2</spacesPerTab>
              </indent>
              <trimTrailingWhitespace />
              <endWithNewline />
            </format>

            <format>
              <includes>
                <include>factcast-site/documentation-docsy/content/**/*.md</include>
                <include>/*.md</include>
                <include>factcast-server-ui/frontend/**/*</include>
              </includes>
              <excludes>
                <exclude>factcast-server-ui/frontend/generated/**/*</exclude>
              </excludes>
              <prettier>
                <config>
                  <useTabs>true</useTabs>
                </config>
              </prettier>
            </format>
          </formats>

        </configuration>
      </plugin>
    </plugins>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>3.1.1</version>
        </plugin>
        <!--This plugin's configuration is used to store Eclipse m2e settings
          only. It has no influence on the Maven build itself. -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <versionRange>3.0.0-M2</versionRange>
                    <goals>
                      <goal>enforce</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <execute />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.commonjava.maven.plugins</groupId>
                    <artifactId>directory-maven-plugin</artifactId>
                    <versionRange>[0.3.1,)</versionRange>
                    <goals>
                      <goal>highest-basedir</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <execute />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>${spring-boot.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${maven-clean-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>${maven-release-plugin.version}</version>
          <configuration>
            <arguments>-Dossrh=true</arguments>
            <preparationGoals>clean validate</preparationGoals>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.commonjava.maven.plugins</groupId>
          <artifactId>directory-maven-plugin</artifactId>
          <version>${directory-maven-plugin.version}</version>
          <executions>
            <execution>
              <id>directories</id>
              <goals>
                <goal>highest-basedir</goal>
              </goals>
              <phase>initialize</phase>
              <configuration>
                <property>repository.root</property>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven-jar-plugin.version}</version>
          <configuration>
            <archive>
              <manifest>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                <addDefaultSpecificationEntries>false</addDefaultSpecificationEntries>
              </manifest>
              <manifestEntries>
                <!--suppress UnresolvedMavenProperty -->
                <Implementation-Branch>${scmBranch}</Implementation-Branch>
              </manifestEntries>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>${maven-source-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${maven-javadoc-plugin.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
  <profiles>
    <profile>
      <id>not-ossrh</id>
      <activation>
        <property>
          <name>!ossrh</name>
        </property>
      </activation>
      <modules>
        <module>factcast-site</module>
        <module>factcast-docker</module>
        <module>factcast-docker-dep</module>
        <module>factcast-examples</module>
        <module>factcast-itests</module>
      </modules>
    </profile>
    <profile>
      <id>oss.release-sign-artifacts</id>
      <activation>
        <property>
          <name>ossrh</name>
        </property>
      </activation>
      <distributionManagement>
        <snapshotRepository>
          <id>ossrh</id>
          <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
          <id>ossrh</id>
          <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
      </distributionManagement>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>${maven-gpg-plugin.version}</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
            <version>${nexus-staging-maven-plugin.version}</version>
            <extensions>true</extensions>
            <configuration>
              <serverId>ossrh</serverId>
              <nexusUrl>https://oss.sonatype.org/</nexusUrl>
              <autoReleaseAfterClose>true</autoReleaseAfterClose>
              <stagingProgressTimeoutMinutes>20</stagingProgressTimeoutMinutes>
              <detail>true</detail>
              <keepStagingRepositoryOnFailure>true</keepStagingRepositoryOnFailure>
              <keepStagingRepositoryOnCloseRuleFailure>true</keepStagingRepositoryOnCloseRuleFailure>
              <showReleased>true</showReleased>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
                <phase>package</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
                <configuration>
                  <additionalOptions>
                    <additionalOption>-Xdoclint:none</additionalOption>
                  </additionalOptions>
                </configuration>
                <phase>package</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
