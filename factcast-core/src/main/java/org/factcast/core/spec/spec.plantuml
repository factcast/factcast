@startuml

title __SPEC's Class Diagram__\n

  namespace org.factcast.core {
    namespace spec {
      class org.factcast.core.spec.FactSpec {
          - aggId : UUID
          - jsFilterScript : String
          - meta : Map<String, String>
          - ns : String
          - type : String
          - version : int
          + FactSpec()
          + aggId()
          + aggId()
          + copy()
          + equals()
          + filterScript()
          + filterScript()
          {static} + from()
          {static} + from()
          {static} + from()
          + hashCode()
          + jsFilterScript()
          + jsFilterScript()
          + meta()
          + meta()
          {static} + ns()
          + ns()
          + toString()
          + type()
          + type()
          + version()
          + version()
          # canEqual()
      }
    }
  }
  

  namespace org.factcast.core {
    namespace spec {
      class org.factcast.core.spec.FactSpecCoordinates {
          - ns : String
          - type : String
          - version : int
          + equals()
          {static} + from()
          {static} + from()
          {static} + from()
          + hashCode()
          + ns()
          + toString()
          + type()
          + version()
          - FactSpecCoordinates()
      }
    }
  }
  

  namespace org.factcast.core {
    namespace spec {
      class org.factcast.core.spec.FactSpecMatcher {
          - aggId : UUID
          {static} - jsScriptEngineSupplier : Supplier<ScriptEngine>
          - meta : Map<String, String>
          - ns : String
          - scriptEngine : ScriptEngine
          {static} - scriptEngineCache : LRUMap<FilterScript, ScriptEngine>
          - type : String
          - version : Integer
          + FactSpecMatcher()
          {static} + matches()
          {static} + matchesAnyOf()
          + test()
          # aggIdMatch()
          # metaMatch()
          # nsMatch()
          # scriptMatch()
          # typeMatch()
          # versionMatch()
          {static} - getEngine()
      }
    }
  }
  

  namespace org.factcast.core {
    namespace spec {
      class org.factcast.core.spec.FilterScript {
          - languageIdentifier : String
          - source : String
          + FilterScript()
          + FilterScript()
          + equals()
          + hashCode()
          {static} + js()
          + languageIdentifier()
          + languageIdentifier()
          + source()
          + source()
          + toString()
          # canEqual()
      }
    }
  }
  

  namespace org.factcast.core {
    namespace spec {
      class org.factcast.core.spec.JavaScriptEngineSupplier {
          - factory : NashornScriptEngineFactory
          {static} - log : Logger
          {static} - staticFactory : NashornScriptEngineFactory
          + JavaScriptEngineSupplier()
          + get()
          # JavaScriptEngineSupplier()
      }
    }
  }
  

  namespace org.factcast.core {
    namespace spec {
      interface org.factcast.core.spec.Specification {
          {abstract} + ns()
          {abstract} + type()
          {abstract} + version()
      }
    }
  }
  

  org.factcast.core.spec.FactSpec o-- org.factcast.core.spec.FilterScript : filterScript
  org.factcast.core.spec.FactSpecMatcher .up.|> java.util.function.Predicate
  org.factcast.core.spec.FactSpecMatcher o-- org.factcast.core.spec.FilterScript : script
  org.factcast.core.spec.JavaScriptEngineSupplier .up.|> java.util.function.Supplier


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
