@startuml

title __LOCK's Class Diagram__\n

  namespace org.factcast.core {
    namespace lock {
      interface org.factcast.core.lock.Attempt {
          {static} + abort()
          {abstract} + call()
          {static} + publish()
          {static} + publish()
      }
    }
  }
  

  namespace org.factcast.core {
    namespace lock {
      class org.factcast.core.lock.AttemptAbortedException {
          {static} - serialVersionUID : long
          + AttemptAbortedException()
          + AttemptAbortedException()
      }
    }
  }
  

  namespace org.factcast.core {
    namespace lock {
      class org.factcast.core.lock.ExceptionAfterPublish {
          - publishedFacts : List<Fact>
          {static} - serialVersionUID : long
          + ExceptionAfterPublish()
          + publishedFacts()
          {static} - render()
      }
    }
  }
  

  namespace org.factcast.core {
    namespace lock {
      class org.factcast.core.lock.IntermediatePublishResult {
          - andThen : Runnable
          - factsToPublish : List<Fact>
          + andThen()
          + andThen()
          + factsToPublish()
          ~ IntermediatePublishResult()
      }
    }
  }
  

  namespace org.factcast.core {
    namespace lock {
      class org.factcast.core.lock.LockedOperationBuilder {
          - ns : String
          + LockedOperationBuilder()
          + on()
      }
    }
  }
  

  namespace org.factcast.core {
    namespace lock {
      class org.factcast.core.lock.LockedOperationBuilder.OnBuilderStep {
          - ids : List<UUID>
          + attempt()
          + optimistic()
          # ids()
          - OnBuilderStep()
      }
    }
  }
  

  namespace org.factcast.core {
    namespace lock {
      class org.factcast.core.lock.PublishingResult {
          - publishedFacts : List<Fact>
          + PublishingResult()
          + publishedFacts()
      }
    }
  }
  

  namespace org.factcast.core {
    namespace lock {
      class org.factcast.core.lock.WithOptimisticLock {
          - count : int
          - ids : List<UUID>
          - interval : long
          {static} - log : Logger
          - ns : String
          - retry : int
          + WithOptimisticLock()
          + attempt()
          + interval()
          + retry()
          # ids()
          # ns()
          # store()
          - runAndWrapException()
          - sleep()
      }
    }
  }
  

  namespace org.factcast.core {
    namespace lock {
      class org.factcast.core.lock.WithOptimisticLock.OptimisticRetriesExceededException {
          - retries : int
          {static} - serialVersionUID : long
          + OptimisticRetriesExceededException()
          + retries()
      }
    }
  }
  

  org.factcast.core.lock.LockedOperationBuilder o-- org.factcast.core.store.FactStore : store
  org.factcast.core.lock.LockedOperationBuilder +-down- org.factcast.core.lock.LockedOperationBuilder.OnBuilderStep
  org.factcast.core.lock.WithOptimisticLock o-- org.factcast.core.store.FactStore : store
  org.factcast.core.lock.WithOptimisticLock +-down- org.factcast.core.lock.WithOptimisticLock.OptimisticRetriesExceededException
  org.factcast.core.lock.WithOptimisticLock.OptimisticRetriesExceededException -up-|> java.util.ConcurrentModificationException


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
