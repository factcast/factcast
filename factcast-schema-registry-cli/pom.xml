<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>factcast-schema-registry-cli</artifactId>
  <parent>
    <groupId>org.factcast</groupId>
    <artifactId>factcast</artifactId>
    <version>0.7.9-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>
  <properties>
    <main.class>org.factcast.schema.registry.cli.Application</main.class>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.factcast</groupId>
        <artifactId>factcast-internal-dep</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-bom</artifactId>
        <version>${kotlin.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>io.micronaut.platform</groupId>
        <artifactId>micronaut-platform</artifactId>
        <version>${micronaut.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>io.micronaut</groupId>
      <artifactId>micronaut-runtime</artifactId>
    </dependency>
    <dependency>
      <groupId>io.micronaut.validation</groupId>
      <artifactId>micronaut-validation</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-stdlib-jdk8</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-reflect</artifactId>
    </dependency>
    <dependency>
      <groupId>org.factcast</groupId>
      <artifactId>factcast-store</artifactId>
      <exclusions>
        <exclusion>
          <artifactId>liquibase-core</artifactId>
          <groupId>org.liquibase</groupId>
        </exclusion>
        <exclusion>
          <artifactId>micrometer-core</artifactId>
          <groupId>io.micrometer</groupId>
        </exclusion>
        <exclusion>
          <artifactId>okhttp</artifactId>
          <groupId>com.squareup.okhttp3</groupId>
        </exclusion>
        <exclusion>
          <artifactId>postgresql</artifactId>
          <groupId>org.postgresql</groupId>
        </exclusion>
        <exclusion>
          <artifactId>shedlock-provider-jdbc-template</artifactId>
          <groupId>net.javacrumbs.shedlock</groupId>
        </exclusion>
        <exclusion>
          <artifactId>shedlock-spring</artifactId>
          <groupId>net.javacrumbs.shedlock</groupId>
        </exclusion>
        <exclusion>
          <artifactId>spring-aspects</artifactId>
          <groupId>org.springframework</groupId>
        </exclusion>
        <exclusion>
          <artifactId>spring-boot-autoconfigure</artifactId>
          <groupId>org.springframework.boot</groupId>
        </exclusion>
        <exclusion>
          <artifactId>spring-jdbc</artifactId>
          <groupId>org.springframework</groupId>
        </exclusion>
        <exclusion>
          <artifactId>tomcat-jdbc</artifactId>
          <groupId>org.apache.tomcat</groupId>
        </exclusion>
        <exclusion>
          <artifactId>json-schema-validator</artifactId>
          <groupId>com.github.java-json-tools</groupId>
        </exclusion>
        <exclusion>
          <artifactId>logback-classic</artifactId>
          <groupId>ch.qos.logback</groupId>
        </exclusion>
        <exclusion>
          <artifactId>logback-core</artifactId>
          <groupId>ch.qos.logback</groupId>
        </exclusion>
        <exclusion>
          <artifactId>commons-logging</artifactId>
          <groupId>commons-logging</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>info.picocli</groupId>
      <artifactId>picocli</artifactId>
      <version>4.7.6</version>
    </dependency>
    <dependency>
      <groupId>io.micronaut.picocli</groupId>
      <artifactId>micronaut-picocli</artifactId>
      <version>5.3.0</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-kotlin</artifactId>
      <!-- even though all other modules are avail for 2.13.2, this one is missing -->
      <version>2.17.1</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>io.github.oshai</groupId>
      <artifactId>kotlin-logging-jvm</artifactId>
      <version>7.0.0</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>2.0.13</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.4.14</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>io.arrow-kt</groupId>
      <artifactId>arrow-core-jvm</artifactId>
      <version>${arrow.version}</version>
    </dependency>
    <dependency>
      <groupId>com.github.java-json-tools</groupId>
      <artifactId>json-schema-validator</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.16.1</version>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>1.17.0</version>
    </dependency>
    <dependency>
      <groupId>io.micronaut.test</groupId>
      <artifactId>micronaut-test-kotest5</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.kotest</groupId>
      <artifactId>kotest-runner-junit5-jvm</artifactId>
      <version>${kotest.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.kotest.extensions</groupId>
      <artifactId>kotest-assertions-arrow-jvm</artifactId>
      <version>1.4.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.kotest</groupId>
      <artifactId>kotest-assertions-core-jvm</artifactId>
      <version>${kotest.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.mockk</groupId>
      <artifactId>mockk</artifactId>
      <version>${mockk.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.mockk</groupId>
      <artifactId>mockk-jvm</artifactId>
      <version>${mockk.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.karumi.kotlinsnapshot</groupId>
      <artifactId>core</artifactId>
      <version>2.3.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${maven-resources-plugin.version}</version>
        <configuration>
          <nonFilteredFileExtensions>
            <nonFilteredFileExtension>ttf</nonFilteredFileExtension>
            <nonFilteredFileExtension>otf</nonFilteredFileExtension>
            <nonFilteredFileExtension>eot</nonFilteredFileExtension>
            <nonFilteredFileExtension>otf</nonFilteredFileExtension>
            <nonFilteredFileExtension>woff</nonFilteredFileExtension>
            <nonFilteredFileExtension>woff2</nonFilteredFileExtension>
            <nonFilteredFileExtension>png</nonFilteredFileExtension>
            <nonFilteredFileExtension>mp3</nonFilteredFileExtension>
            <nonFilteredFileExtension>mp4</nonFilteredFileExtension>
            <nonFilteredFileExtension>pdf</nonFilteredFileExtension>
          </nonFilteredFileExtensions>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.6.0</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer
                  implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>${main.class}</mainClass>
                </transformer>
                <transformer
                  implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
              </transformers>
              <finalName>fc-schema-cli</finalName>
              <createDependencyReducedPom>false</createDependencyReducedPom>
              <minimizeJar>false</minimizeJar>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>eu.prismacapacity</groupId>
        <artifactId>unixuid-maven-plugin</artifactId>
        <version>1.0.8</version>
        <executions>
          <execution>
            <goals>
              <goal>unixuid</goal>
            </goals>
            <phase>initialize</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>3.3.0</version>
        <executions>
          <execution>
            <id>build</id>
            <goals>
              <goal>exec</goal>
            </goals>
            <phase>integration-test</phase>
            <configuration>
              <executable>java</executable>
              <arguments>
                <argument>-jar</argument>
                <argument>target/fc-schema-cli.jar</argument>
                <argument>build</argument>
                <argument>--base-path</argument>
                <argument>../factcast-examples/factcast-example-schema-registry/src/main/resources
                </argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <id>hugo</id>
            <goals>
              <goal>exec</goal>
            </goals>
            <phase>post-integration-test</phase>
            <configuration>
              <executable>docker</executable>
              <!-- optional -->
              <workingDirectory>output</workingDirectory>
              <arguments>
                <argument>run</argument>
                <argument>--rm</argument>
                <argument>-u</argument>
                <argument>${os.detected.userid}</argument>
                <argument>-v</argument>
                <argument>${project.basedir}/output:/srv/hugo</argument>
                <argument>yanqd0/hugo:0.61.0</argument>
                <argument>hugo</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>kotlin-maven-plugin</artifactId>
        <groupId>org.jetbrains.kotlin</groupId>
        <version>${kotlin.version}</version>
        <configuration>
          <compilerPlugins>
            <plugin>all-open</plugin>
          </compilerPlugins>
          <pluginOptions>
            <option>all-open:annotation=io.micronaut.aop.Around</option>
          </pluginOptions>
        </configuration>
        <executions>
          <execution>
            <id>kapt</id>
            <goals>
              <goal>kapt</goal>
            </goals>
            <configuration>
              <sourceDirs>
                <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
              </sourceDirs>
              <annotationProcessorPaths>
                <annotationProcessorPath>
                  <groupId>info.picocli</groupId>
                  <artifactId>picocli-codegen</artifactId>
                  <version>4.7.6</version>
                </annotationProcessorPath>
                <annotationProcessorPath>
                  <groupId>io.micronaut</groupId>
                  <artifactId>micronaut-inject-java</artifactId>
                  <version>4.3.12</version>
                </annotationProcessorPath>
                <annotationProcessorPath>
                  <groupId>io.micronaut.validation</groupId>
                  <artifactId>micronaut-validation-processor</artifactId>
                  <version>4.5.0</version>
                </annotationProcessorPath>
              </annotationProcessorPaths>
            </configuration>
          </execution>
          <execution>
            <id>compile</id>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <sourceDirs>
                <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
              </sourceDirs>
            </configuration>
          </execution>
          <execution>
            <id>test-kapt</id>
            <goals>
              <goal>test-kapt</goal>
            </goals>
            <configuration>
              <sourceDirs>
                <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
              </sourceDirs>
              <annotationProcessorPaths>
                <annotationProcessorPath>
                  <groupId>info.picocli</groupId>
                  <artifactId>picocli-codegen</artifactId>
                  <version>4.7.6</version>
                </annotationProcessorPath>
                <annotationProcessorPath>
                  <groupId>io.micronaut</groupId>
                  <artifactId>micronaut-inject-java</artifactId>
                  <version>4.3.12</version>
                </annotationProcessorPath>
                <annotationProcessorPath>
                  <groupId>io.micronaut.validation</groupId>
                  <artifactId>micronaut-validation-processor</artifactId>
                  <version>4.5.0</version>
                </annotationProcessorPath>
              </annotationProcessorPaths>
            </configuration>
          </execution>
          <execution>
            <id>test-compile</id>
            <goals>
              <goal>test-compile</goal>
            </goals>
            <configuration>
              <sourceDirs>
                <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
                <sourceDir>${project.basedir}/target/generated-sources/kapt/test</sourceDir>
              </sourceDirs>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-maven-allopen</artifactId>
            <version>${kotlin.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <includes>
            <include>*</include>
          </includes>
          <excludedGroups>integration</excludedGroups>
          <!--suppress UnresolvedMavenProperty -->
          <argLine>${surefire.jacoco.args}</argLine>
          <skip>${skipSurefire}</skip>
          <forkCount>1</forkCount>
        </configuration>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>        <!--This plugin's configuration is used to store Eclipse m2e settings only.
          It has no influence on the Maven build itself. -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>
                      org.jetbrains.kotlin
                    </groupId>
                    <artifactId>
                      kotlin-maven-plugin
                    </artifactId>
                    <versionRange>
                      [1.3.61,)
                    </versionRange>
                    <goals>
                      <goal>kapt</goal>
                      <goal>test-kapt</goal>
                      <goal>compile</goal>
                      <goal>test-compile</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>eu.prismacapacity</groupId>
                    <artifactId>unixuid-maven-plugin</artifactId>
                    <versionRange>[1.0.8,)</versionRange>
                    <goals>
                      <goal>unixuid</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
